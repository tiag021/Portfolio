{"ast":null,"code":"var _jsxFileName = \"/home/tiago/Portfolio/portfolio/src/Pages/VerifiedUser/index.js\",\n  _s = $RefreshSig$();\n/* eslint-disable react/prop-types */\n\nimport React, { useEffect, useState } from 'react';\nimport { useNavigate, useParams } from 'react-router-dom';\nimport NavBar from '../../Components/NavBar';\nimport api from '../../service/api';\nimport loading from '../../assets/loading.svg';\nimport loadingWhite from '../../assets/loading_white.svg';\nimport expiredEmail from '../../assets/expiredemail.svg';\nimport warning from '../../assets/warning.svg';\nimport verified from '../../assets/verified.svg';\nimport { faCheck } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport style from './style.module.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst VerifiedUser = () => {\n  _s();\n  const {\n    token\n  } = useParams();\n  const [userv, setUserV] = useState(false);\n  const [isLoading, setIsLoading] = useState(true);\n  const [isSendigEmail, setIsSendingEmail] = useState(false);\n  const [emailSent, setEmailSent] = useState(false);\n  const history = useNavigate();\n  const [errorMessage, setErrorMessage] = useState(null);\n  const verifyUser = async () => {\n    setIsLoading(true);\n    try {\n      // Validate the token by fetching user data\n      await api.get('/user', {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n\n      // Proceed with confirming the token\n      await confirmToken();\n    } catch (error) {\n      if (error.response) {\n        setErrorMessage(error.response.data.error);\n        console.log(error.response.data.error);\n      } else if (error.request) {\n        console.log('Request error:', error.request);\n      } else {\n        console.log('Error:', error.message);\n      }\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  const confirmToken = async () => {\n    try {\n      await api.get(`/user/confirm/${token}`);\n      setUserV(true); // Token confirmed, set user as verified\n    } catch (error) {\n      if (error.response) {\n        console.error('Response error:', error.response.data);\n      } else if (error.request) {\n        console.error('Request error:', error.request);\n      } else {\n        console.error('Error:', error.message);\n      }\n    }\n  };\n  const redirectTo404 = () => {\n    history('/error/notfound');\n  };\n  const sendNewEmail = async () => {\n    setIsSendingEmail(true);\n    try {\n      await api.get('/user/newtoken', {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n    } catch (error) {\n      if (error.response) {\n        console.log('Response error:', error.response.data);\n      } else if (error.request) {\n        console.log('Request error:', error.request);\n      } else {\n        console.log('Error:', error.message);\n      }\n    } finally {\n      setIsSendingEmail(false);\n      setEmailSent(true);\n    }\n  };\n  useEffect(() => {\n    verifyUser();\n  }, []);\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(NavBar, {\n        scrolled: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: style.Loading,\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: loading,\n          alt: \"Loading\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: style.body,\n      children: [/*#__PURE__*/_jsxDEV(NavBar, {\n        scrolled: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 9\n      }, this), errorMessage === 'Invalid token!' ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: style.InvalidToken,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: style.InvalidToken_img,\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: warning\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: style.InvalidToken_txt,\n          children: \"We're sorry, but your token is invalid. Please check your email and click the confirmation link to verify your account. If you still experience issues, please contact our support team for assistance.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 11\n      }, this) :\n      //Here is the Page that we will show if the user dont exist in the database so he needs to register\n      //This page will be the 404 not found page\n      errorMessage === 'The user does not exist!' ? redirectTo404() :\n      //Now if the token has expired we have to tell the user to ask for another email so he can confirm again the email\n      errorMessage == 'Token expired!' ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: style.expiredEmail,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: style.expiredEmail_img,\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: expiredEmail\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 19\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: style.expiredEmail_txt,\n          children: \"Sorry, the email confirmation link has expired. Please request a new email confirmation link to complete the registration process.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: style.requestNewEmail,\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            onClick: sendNewEmail,\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              src: loadingWhite,\n              className: isSendigEmail ? style.active : style.noactive\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 142,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n              className: emailSent ? style.emailSent : style.emailNotSent,\n              icon: faCheck\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 146,\n              columnNumber: 21\n            }, this), \"Request New Email\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 141,\n            columnNumber: 19\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 15\n      }, this) :\n      //If we dont  have any error the the user will be confirmed\n      userv ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: style.VerifiedUser,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: style.image,\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: verified\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 158,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 19\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: style.text,\n          children: \"Congratulations! Your account has been created successfully. You can now login and start using our service. Thank you for joining us!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 19\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 17\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n_s(VerifiedUser, \"KiChNpZ8dNhUImWwb8mBpwAkcrU=\", false, function () {\n  return [useParams, useNavigate];\n});\n_c = VerifiedUser;\nexport default VerifiedUser;\nvar _c;\n$RefreshReg$(_c, \"VerifiedUser\");","map":{"version":3,"names":["React","useEffect","useState","useNavigate","useParams","NavBar","api","loading","loadingWhite","expiredEmail","warning","verified","faCheck","FontAwesomeIcon","style","jsxDEV","_jsxDEV","Fragment","_Fragment","VerifiedUser","_s","token","userv","setUserV","isLoading","setIsLoading","isSendigEmail","setIsSendingEmail","emailSent","setEmailSent","history","errorMessage","setErrorMessage","verifyUser","get","headers","Authorization","confirmToken","error","response","data","console","log","request","message","redirectTo404","sendNewEmail","children","scrolled","fileName","_jsxFileName","lineNumber","columnNumber","className","Loading","src","alt","body","InvalidToken","InvalidToken_img","InvalidToken_txt","expiredEmail_img","expiredEmail_txt","requestNewEmail","onClick","active","noactive","emailNotSent","icon","image","text","_c","$RefreshReg$"],"sources":["/home/tiago/Portfolio/portfolio/src/Pages/VerifiedUser/index.js"],"sourcesContent":["/* eslint-disable react/prop-types */\n\nimport React, { useEffect, useState } from 'react';\nimport { useNavigate, useParams } from 'react-router-dom';\nimport NavBar from '../../Components/NavBar';\n\nimport api from '../../service/api';\n\nimport loading from '../../assets/loading.svg';\nimport loadingWhite from '../../assets/loading_white.svg';\nimport expiredEmail from '../../assets/expiredemail.svg';\nimport warning from '../../assets/warning.svg';\nimport verified from '../../assets/verified.svg';\n\nimport { faCheck } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n\nimport style from './style.module.css';\n\nconst VerifiedUser = () => {\n  const { token } = useParams();\n  const [userv, setUserV] = useState(false);\n  const [isLoading, setIsLoading] = useState(true);\n\n  const [isSendigEmail, setIsSendingEmail] = useState(false);\n  const [emailSent, setEmailSent] = useState(false);\n\n  const history = useNavigate();\n  const [errorMessage, setErrorMessage] = useState(null);\n\n  const verifyUser = async () => {\n    setIsLoading(true);\n    try {\n      // Validate the token by fetching user data\n      await api.get('/user', {\n        headers: { Authorization: `Bearer ${token}` }\n      });\n\n      // Proceed with confirming the token\n      await confirmToken();\n    } catch (error) {\n      if (error.response) {\n        setErrorMessage(error.response.data.error);\n        console.log(error.response.data.error);\n      } else if (error.request) {\n        console.log('Request error:', error.request);\n      } else {\n        console.log('Error:', error.message);\n      }\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  const confirmToken = async () => {\n    try {\n      await api.get(`/user/confirm/${token}`);\n\n      setUserV(true); // Token confirmed, set user as verified\n    } catch (error) {\n      if (error.response) {\n        console.error('Response error:', error.response.data);\n      } else if (error.request) {\n        console.error('Request error:', error.request);\n      } else {\n        console.error('Error:', error.message);\n      }\n    }\n  };\n\n  const redirectTo404 = () => {\n    history('/error/notfound');\n  };\n\n  const sendNewEmail = async () => {\n    setIsSendingEmail(true);\n\n    try {\n      await api.get('/user/newtoken', {\n        headers: { Authorization: `Bearer ${token}` }\n      });\n    } catch (error) {\n      if (error.response) {\n        console.log('Response error:', error.response.data);\n      } else if (error.request) {\n        console.log('Request error:', error.request);\n      } else {\n        console.log('Error:', error.message);\n      }\n    } finally {\n      setIsSendingEmail(false);\n      setEmailSent(true);\n    }\n  };\n\n  useEffect(() => {\n    verifyUser();\n  }, []);\n\n  if (isLoading) {\n    return (\n      <div>\n        <NavBar scrolled={true} />\n        <div className={style.Loading}>\n          <img src={loading} alt=\"Loading\" />\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <>\n      <div className={style.body}>\n        <NavBar scrolled={true}></NavBar>\n        {errorMessage === 'Invalid token!' ? (\n          <div className={style.InvalidToken}>\n            <div className={style.InvalidToken_img}>\n              <img src={warning}></img>\n            </div>\n            <div className={style.InvalidToken_txt}>\n              We&apos;re sorry, but your token is invalid. Please check your email and click the\n              confirmation link to verify your account. If you still experience issues, please\n              contact our support team for assistance.\n            </div>\n          </div>\n        ) : //Here is the Page that we will show if the user dont exist in the database so he needs to register\n          //This page will be the 404 not found page\n          errorMessage === 'The user does not exist!' ? (\n            redirectTo404()\n          ) : //Now if the token has expired we have to tell the user to ask for another email so he can confirm again the email\n            errorMessage == 'Token expired!' ? (\n              <div className={style.expiredEmail}>\n                <div className={style.expiredEmail_img}>\n                  <img src={expiredEmail}></img>\n                </div>\n                <div className={style.expiredEmail_txt}>\n                  Sorry, the email confirmation link has expired. Please request a new email\n                  confirmation link to complete the registration process.\n                </div>\n                <div className={style.requestNewEmail}>\n                  <div onClick={sendNewEmail}>\n                    <img\n                      src={loadingWhite}\n                      className={isSendigEmail ? style.active : style.noactive}\n                    ></img>\n                    <FontAwesomeIcon\n                      className={emailSent ? style.emailSent : style.emailNotSent}\n                      icon={faCheck}\n                    ></FontAwesomeIcon>\n                    Request New Email\n                  </div>\n                </div>\n              </div>\n            ) : //If we dont  have any error the the user will be confirmed\n              userv ? (\n                <div className={style.VerifiedUser}>\n                  <div className={style.image}>\n                    <img src={verified}></img>\n                  </div>\n                  <div className={style.text}>\n                    Congratulations! Your account has been created successfully. You can now login and\n                    start using our service. Thank you for joining us!\n                  </div>\n                </div>\n              ) : (\n                <div></div>\n              )}\n      </div>\n    </>\n  );\n}\nexport default VerifiedUser;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}