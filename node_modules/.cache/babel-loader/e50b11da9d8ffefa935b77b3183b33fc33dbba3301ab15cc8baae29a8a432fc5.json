{"ast":null,"code":"var _jsxFileName = \"/home/tiago/Portfolio/portfolio/src/Pages/ResetPassw/index.js\",\n  _s = $RefreshSig$();\n/* eslint-disable react/prop-types */\n\nimport React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport NavBar from '../../Components/NavBar';\nimport api from '../../service/api';\nimport expiredEmail from '../../assets/expiredemail.svg';\nimport warning from '../../assets/warning.svg';\nimport style from './style.module.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst ResetPassw = () => {\n  _s();\n  const {\n    token\n  } = useParams();\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [cpassword, setcPassword] = useState('');\n  const [errorMessage, setErrorMessage] = useState(null);\n  const resetPassw = async () => {\n    if (!(password === cpassword)) {\n      alert('The passwords don\\'t match, please try again');\n      return;\n    }\n    try {\n      await api.post('/user/change/reset/password', {\n        email,\n        password\n      });\n      alert('Your password has been successfully reset');\n    } catch (error) {\n      if (error.response) {\n        console.log(error.response.data);\n      } else if (error.request) {\n        console.log(error.request);\n      } else {\n        console.log('Error', error.message);\n      }\n    }\n  };\n  const verifyUser = async () => {\n    try {\n      // First we have to see if the token is valid\n      // That means if the token is for an existent user on the database or is expired\n      const {\n        data\n      } = await api.get('/user', {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      setEmail(data.email);\n      await confirmToken();\n    } catch (error) {\n      if (error.response) {\n        setErrorMessage(error.response.data.error);\n        console.log(error.response.data.error);\n      } else if (error.request) {\n        console.log(error.request);\n      } else {\n        console.log('Error', error.message);\n      }\n    }\n  };\n  const confirmToken = async () => {\n    try {\n      await api.get(`/confirm/${token}`);\n    } catch (error) {\n      if (error.response) {\n        console.log(error.response);\n      } else if (error.request) {\n        console.log(error.request);\n      } else {\n        console.log('Error', error.message);\n      }\n    }\n  };\n  useEffect(() => {\n    verifyUser();\n  }, [token]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: style.body,\n      children: [/*#__PURE__*/_jsxDEV(NavBar, {\n        scrolled: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this), errorMessage === 'Invalid token!' ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: style.InvalidToken,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: style.InvalidToken_img,\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: warning\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: style.InvalidToken_txt,\n          children: \"We're sorry, but the token you are using to reset your password is invalid.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 11\n      }, this) :\n      //Now if the token has expired we have to tell the user to ask for another email so he can confirm again the email\n      errorMessage == 'Token expired!' ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: style.expiredEmail,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: style.expiredEmail_img,\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: expiredEmail\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: style.expiredEmail_txt,\n          children: \"We're sorry, but the token you are using to reset your password has expired. Please request a new password reset link.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 13\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: style.form,\n        children: /*#__PURE__*/_jsxDEV(\"form\", {\n          className: style.signUpForm,\n          onSubmit: resetPassw,\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"password\",\n            children: \"New Password*\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: 'password',\n            required: true,\n            id: \"password\",\n            onChange: event => setPassword(event.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"cpassword\",\n            children: \"Confirm Password*\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: 'password',\n            id: \"cpassword\",\n            required: true,\n            onChange: event => setcPassword(event.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            children: \"Reset Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 129,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n_s(ResetPassw, \"gIllWd4LdNkFdBTXblxHa3A5xRI=\", false, function () {\n  return [useParams];\n});\n_c = ResetPassw;\nexport default ResetPassw;\nvar _c;\n$RefreshReg$(_c, \"ResetPassw\");","map":{"version":3,"names":["React","useEffect","useState","useParams","NavBar","api","expiredEmail","warning","style","jsxDEV","_jsxDEV","Fragment","_Fragment","ResetPassw","_s","token","email","setEmail","password","setPassword","cpassword","setcPassword","errorMessage","setErrorMessage","resetPassw","alert","post","error","response","console","log","data","request","message","verifyUser","get","headers","Authorization","confirmToken","children","className","body","scrolled","fileName","_jsxFileName","lineNumber","columnNumber","InvalidToken","InvalidToken_img","src","InvalidToken_txt","expiredEmail_img","expiredEmail_txt","form","signUpForm","onSubmit","htmlFor","type","required","id","onChange","event","target","value","_c","$RefreshReg$"],"sources":["/home/tiago/Portfolio/portfolio/src/Pages/ResetPassw/index.js"],"sourcesContent":["/* eslint-disable react/prop-types */\n\nimport React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport NavBar from '../../Components/NavBar';\n\nimport api from '../../service/api';\n\nimport expiredEmail from '../../assets/expiredemail.svg';\nimport warning from '../../assets/warning.svg';\n\nimport style from './style.module.css';\n\nconst ResetPassw = () => {\n  const { token } = useParams();\n\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [cpassword, setcPassword] = useState('');\n  const [errorMessage, setErrorMessage] = useState(null);\n\n  const resetPassw = async () => {\n    if (!(password === cpassword)) {\n      alert('The passwords don\\'t match, please try again');\n      return;\n    }\n\n    try {\n      await api.post('/user/change/reset/password', {\n        email,\n        password\n      });\n      alert('Your password has been successfully reset');\n    } catch (error) {\n      if (error.response) {\n        console.log(error.response.data);\n      } else if (error.request) {\n        console.log(error.request);\n      } else {\n        console.log('Error', error.message);\n      }\n    }\n  };\n\n  const verifyUser = async () => {\n    try {\n      // First we have to see if the token is valid\n      // That means if the token is for an existent user on the database or is expired\n      const { data } = await api.get('/user', {\n        headers: { Authorization: `Bearer ${token}` }\n      });\n\n      setEmail(data.email);\n      await confirmToken();\n    } catch (error) {\n      if (error.response) {\n        setErrorMessage(error.response.data.error);\n        console.log(error.response.data.error);\n      } else if (error.request) {\n        console.log(error.request);\n      } else {\n        console.log('Error', error.message);\n      }\n    }\n  };\n\n  const confirmToken = async () => {\n    try {\n      await api.get(`/confirm/${token}`);\n    } catch (error) {\n      if (error.response) {\n        console.log(error.response);\n      } else if (error.request) {\n        console.log(error.request);\n      } else {\n        console.log('Error', error.message);\n      }\n    }\n  };\n\n  useEffect(() => {\n    verifyUser();\n  }, [token]);\n\n  return (\n    <>\n      <div className={style.body}>\n        <NavBar scrolled={true}></NavBar>\n\n        {errorMessage === 'Invalid token!' ? (\n          <div className={style.InvalidToken}>\n            <div className={style.InvalidToken_img}>\n              <img src={warning}></img>\n            </div>\n            <div className={style.InvalidToken_txt}>\n              We&apos;re sorry, but the token you are using to reset your password is invalid.\n            </div>\n          </div>\n        ) : //Now if the token has expired we have to tell the user to ask for another email so he can confirm again the email\n          errorMessage == 'Token expired!' ? (\n            <div className={style.expiredEmail}>\n              <div className={style.expiredEmail_img}>\n                <img src={expiredEmail}></img>\n              </div>\n              <div className={style.expiredEmail_txt}>\n                We&apos;re sorry, but the token you are using to reset your password has expired. Please\n                request a new password reset link.\n              </div>\n            </div>\n          ) : (\n            <div className={style.form}>\n              <form className={style.signUpForm} onSubmit={resetPassw}>\n                <label htmlFor=\"password\">New Password*</label>\n                <input\n                  type={'password'}\n                  required\n                  id=\"password\"\n                  onChange={(event) => setPassword(event.target.value)}\n                ></input>\n\n                <label htmlFor=\"cpassword\">Confirm Password*</label>\n                <input\n                  type={'password'}\n                  id=\"cpassword\"\n                  required\n                  onChange={(event) => setcPassword(event.target.value)}\n                ></input>\n\n                <button type=\"submit\">Reset Password</button>\n              </form>\n            </div>\n          )}\n      </div>\n    </>\n  );\n}\n\nexport default ResetPassw;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}